
stages:
  - build
  - package
  - mirror

.default_cache: &default_cache
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .git/modules
      - host-musl
      - lkl
      - sgx-lkl-musl

variables:
  GSG_RELEASE_BRANCHES: master

version:
  stage: .pre
  image: registry.gitlab.com/juhani/go-semrel-gitlab:v0.21.1
  variables:
    GIT_FETCH_EXTRA_FLAGS: --tags
  script:
    - echo RELEASE_VERSION=$(release --bump-patch next-version) > version.env
  artifacts:
    reports:
      dotenv: version.env
  except:
    - tags
 
prepare_submodules:
  image: alpine
  stage: .pre
  cache:
    << : *default_cache
    policy: pull-push
  before_script:
    - apk --no-cache add git
  script:
    - git submodule sync
    - git submodule update --init host-musl sgx-lkl-musl
    - rm -rf lkl
    - git clone --branch sgx-lkl-state --depth 1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/madana-io/linux.git lkl

build_tools:
  image: alpine
  stage: build
  script:
    - exit 0
  artifacts:
    paths:
    - tools/


build_simulation:
  image: $CI_REGISTRY_IMAGE:latest
  stage: build
  cache:
    << : *default_cache
    policy: pull
  script:
    - sudo chown -R $(id -u):$(id -g) .
    #- cd lkl && git status && git checkout -f HEAD && cd ../
    - make sim DEBUG=0
    - mv build simulation
  artifacts:
    paths:
    - simulation/

build_hardware:
  image: $CI_REGISTRY_IMAGE:latest
  stage: build
  cache:
    << : *default_cache
    policy: pull
  script:
    - sudo chown -R $(id -u):$(id -g) .
    #- cd lkl && git status && git checkout -f HEAD && cd ../
    - make DEBUG=0
    - make sgx-lkl-sign
    - mv build hardware
  artifacts:
    paths:
    - hardware/

build_hardware_debug:
  image: $CI_REGISTRY_IMAGE:latest
  stage: build
  cache:
    << : *default_cache
    policy: pull
  script:
    - sudo chown -R $(id -u):$(id -g) .
    - make DEBUG=1
    - make sgx-lkl-sign
    - mv build hardware_debug
  artifacts:
    paths:
    - hardware_debug/

build_container:
  image: docker:latest
  #image: quay.io/containers/buildah:v1.16.2
  stage: package
  tags:
    - dind
  services:
  - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker pull $CI_REGISTRY_IMAGE:latest || true
  - >
    docker build --pull
    --tag $CI_REGISTRY_IMAGE:$RELEASE_VERSION
    --cache-from $CI_REGISTRY_IMAGE:latest .
  - docker push $CI_REGISTRY_IMAGE:$RELEASE_VERSION
  - docker tag $CI_REGISTRY_IMAGE:$RELEASE_VERSION $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  - >
    if [ "$CI_COMMIT_REF_SLUG" == "master" ]; then
      docker tag $CI_REGISTRY_IMAGE:$RELEASE_VERSION $CI_REGISTRY_IMAGE:latest
      docker push $CI_REGISTRY_IMAGE:latest
    fi
  except:
  - tags



mirror_github:
  image: quay.io/containers/buildah:latest
  stage: mirror
  script:
  - buildah login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - buildah pull $CI_REGISTRY_IMAGE:latest || true
  - buildah login -u $GITREPOUSER -p $GITREPOTOKEN $GITHUB_REGISTRY
  - buildah tag $CI_REGISTRY_IMAGE:latest $GITHUB_REGISTRY_IMAGE:latest 
  - buildah push $GITHUB_REGISTRY_IMAGE:latest

#trigger_build_docker:
#  stage: .post
#  trigger: madana-io/madana-dan-docker
